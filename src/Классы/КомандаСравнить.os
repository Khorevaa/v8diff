#Использовать logos
#Использовать asserts
#Использовать v8runner
#Использовать tempfiles

Перем Лог;

///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Сравнение внешних бинарных файлов 1С");
	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "ПервыйПуть", "Путь к первому файлу для сравнения");
	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "ВторойПуть", "Путь ко второму файлу для сравнения");
	Парсер.ДобавитьКоманду(ОписаниеКоманды);

	// для использования по умолчанию
	Парсер.ДобавитьПараметр("ПервыйПуть", "Путь к первому файлу для сравнения");
	Парсер.ДобавитьПараметр("ВторойПуть", "Путь ко второму файлу для сравнения");
КонецПроцедуры

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие ключей командной строки и их значений
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач ДополнительныеПараметры) Экспорт
	Лог = ДополнительныеПараметры.Лог;
	
	ПервыйПуть = ПараметрыКоманды["ПервыйПуть"];
	ВторойПуть = ПараметрыКоманды["ВторойПуть"];
    Лог.Отладка("Первый путь <%1>", ПервыйПуть);
    Лог.Отладка("Второй путь <%1>", ВторойПуть);

	ПервыйФайл = Новый Файл(ПервыйПуть);
	ВторойФайл = Новый Файл(ВторойПуть);
	Ожидаем.Что(ПервыйФайл.Существует(), СтрШаблон("Первый файл должен существовать, а это не так! %1", ПервыйПуть)).ЭтоИстина();
	Ожидаем.Что(ВторойФайл.Существует(), СтрШаблон("Первый файл должен существовать, а это не так! %1", ВторойПуть)).ЭтоИстина();

	СравнитьФайлы(ПервыйФайл, ВторойФайл);

	Возврат МенеджерКомандПриложения.РезультатыКоманд().Успех;
КонецФункции

Процедура СравнитьФайлы(Знач ПервыйФайл, Знач ВторойФайл)
	УстановитьУровеньЛогаКонфигуратораРавнымУровнюПродукта();

	УправлениеКонфигуратором = Новый УправлениеКонфигуратором;
	ВременныйКаталог = ВременныеФайлы.СоздатьКаталог();

	УправлениеКонфигуратором.КаталогСборки(ВременныйКаталог);

	ФайлОписанияСравнения = ПодготовитьФайлОписанияСравнения(ПервыйФайл, ВторойФайл);

	Параметры = УправлениеКонфигуратором.ПолучитьПараметрыЗапуска();
	Параметры.Добавить("");

	КомандаДля1С = СтрШаблон("""diff;%1;shutdownAfterClose""", ФайлОписанияСравнения.ПолноеИмя);
	ДопПараметр = СтрШаблон("/Execute %1 ", ОбъединитьПути(ПараметрыСистемы.КаталогПроекта(), "tools", "v8reader.epf"));

	УправлениеКонфигуратором.ЗапуститьВРежимеПредприятия(КомандаДля1С, Ложь, ДопПараметр);

КонецПроцедуры

Процедура УстановитьУровеньЛогаКонфигуратораРавнымУровнюПродукта()
	ДопЛог = Логирование.ПолучитьЛог("oscript.lib.v8runner");
	ДопЛог.УстановитьУровень(Лог.Уровень());
КонецПроцедуры

Функция ПодготовитьФайлОписанияСравнения(Знач ПервыйФайл, Знач ВторойФайл)
	ПутьФайла = ВременныеФайлы.НовоеИмяФайла();
	ЗаписьТекста = Новый ЗаписьТекста(ПутьФайла);
	ЗаписьТекста.ЗаписатьСтроку(ПервыйФайл.ПолноеИмя);
	ЗаписьТекста.ЗаписатьСтроку(ВторойФайл.ПолноеИмя);
	ЗаписьТекста.Закрыть();
	Возврат Новый Файл(ПутьФайла);
КонецФункции
